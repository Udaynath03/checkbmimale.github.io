/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
!function(e,t,i,o){"use strict";e(function(){function t(t){console.log("WHITE GAUGE");var i=e(".gauge");t>39.9&&(t=39.9);var o;t<18.5?(e(".results").hide(),e(".results_underweight").show(),o=t/18.5*40):t<25?(e(".results").hide(),e(".results_healthyweight_1").show(),o=(t-18.5)/6.5*45+45):t<30?(e(".results").hide(),e(".results_overweight_1").show(),o=(t-25)/5*45+90):(e(".results").hide(),e(".results_obese").show(),o=(t-30)/10*45+140),i.find(".needle").css({transform:"rotate("+o+"deg)"}),s(g.bmi)}function o(t){console.log("ASIAN GAUGE");var i=e(".gauge");t>39.9&&(t=39.9);var o;t<18.5?(e(".results").hide(),e(".results_underweight").show(),o=t/18.5*40):t<23?(e(".results").hide(),e(".results_healthyweight_2").show(),o=(t-18.5)/6.5*45+45):t<27.5?(e(".results").hide(),e(".results_overweight_2").show(),console.log("OVERWEIGHT ASIAN"),o=(t-25)/5*45+110):(e(".results").hide(),e(".results_obese").show(),console.log("OBESE ASIAN"),o=(t-30)/10*45+150,o>180&&(o=180)),i.find(".needle").css({transform:"rotate("+o+"deg)"}),h(g.bmi)}function s(t){console.log("results"),e(".results").show(),t<18.5?(e(".result_block").hide(),e(".underweight_result").show(),console.log("underweight")):18.5<t&&t<25?(e(".result_block").hide(),e(".healthyweight_result").show(),console.log("healthy weight")):25<t&&t<30?(e(".result_block").hide(),e(".overweight_result").show(),console.log("overweight")):(e(".result_block").hide(),e(".obeseweight_result").show(),console.log("obese"))}function h(t){console.log("asian_results"),e(".results").show(),t<18.5?(e(".result_block").hide(),e(".underweight_result").show(),console.log("underweight")):18.5<t&&t<23?(e(".result_block").hide(),e(".healthyweight_2_result").show(),console.log("healthy 2 weight")):23<t&&t<27.4?(e(".result_block").hide(),e(".overweight_2_result").show(),console.log("overweight 2")):(e(".result_block").hide(),e(".obeseweight_result").show(),console.log("obese"))}const g={ethnicity:"",gender:"",height:"",weight:"",bmi:"",weight_unit:"kg",height_unit:"cm"};console.log(g),e(".header_copy_title").click(function(){e(".header_copy_body_mobile").toggle(),e(this).find(".red_down_arrow").toggleClass("rotate")}),e(".disclaimer_copy_title").click(function(){e(".disclaimer_copy_body_mobile").toggle(),e(this).find(".red_down_arrow").toggleClass("rotate"),e("html, body").animate({scrollTop:e(".disclaimer_copy_title").offset().top+360},1e3)}),e(".circle_female").click(function(){g.gender="female",e(".height_image").css("background-image",'url("assets/img/height_female.svg")'),e(".circle_female").css("background-image",'url("assets/img/female_selected.svg")'),e(".circle_male").css("background-image",'url("assets/img/male.svg")'),console.log(g)}),e(".circle_male").click(function(){g.gender="male",e(".height_image").css("background-image",'url("assets/img/height_male.svg")'),e(".circle_male").css("background-image",'url("assets/img/male_selected.svg")'),e(".circle_female").css("background-image",'url("assets/img/female.svg")'),console.log(g)}),e(".btn_metric_weight").click(function(){e(".btn_metric_weight").css("background-color","rgb(237,31,84)"),e(".btn_imperial_weight").css("background-color","rgb(108, 113, 123)"),e(".metric_weight").show(),e(".imperial_weight").hide(),g.bmi="",g.height="",g.weight="",g.weight_unit="kg",console.warn("W METRIC"),console.log(g),e(".imperial_weight_input").val("")}),e(".btn_imperial_weight").click(function(){e(".btn_metric_weight").css("background-color","rgb(108, 113, 123)"),e(".btn_imperial_weight").css("background-color","rgb(237,31,84)"),e(".metric_weight").hide(),e(".imperial_weight").show(),g.bmi="",g.height="",g.weight="",g.weight_unit="st",console.log(g),e(".metric_weight_input").val("")}),e(".btn_metric_height").click(function(){e(".btn_metric_height").css("background-color","rgb(237,31,84)"),e(".btn_imperial_height").css("background-color","rgb(108, 113, 123)"),e(".metric_height").show(),e(".imperial_height").hide(),g.bmi="",g.height="",g.weight="",g.height_unit="cm",console.log(g),e(".imperial_height_input").val("")}),e(".btn_imperial_height").click(function(){e(".btn_metric_height").css("background-color","rgb(108, 113, 123)"),e(".btn_imperial_height").css("background-color","rgb(237,31,84)"),e(".metric_height").hide(),e(".imperial_height").show(),g.bmi="",g.height="",g.weight="",g.height_unit="ft",e(".metric_height_input").val(""),console.log(g)}),e(".ethnicity_item").click(function(){g.ethnicity=e(this).attr("data-ethnicity"),e(".ethnicity_item").css("background-color","white"),e(this).css("background-color","rgba(208, 208, 208, 0.3)"),e(".drop_down").hide(),e(".down_arrow").removeClass("rotate"),e(".btn_ethnicity").css("background-color","rgb(237,31,84)"),e(".ethnicity_chosen").text(this.innerHTML),1==g.ethnicity?e(".gauge_outer").css("backgroundImage",'url("assets/img/gauge.svg")'):e(".gauge_outer").css("backgroundImage",'url("assets/img/gauge_2.svg")'),console.log(g)}),e(".btn_ethnicity").click(function(t){t.stopPropagation(),e(".drop_down").toggle(),e(this).find(".down_arrow").toggleClass("rotate")}),e(i).click(function(){e(".drop_down").hide(),e(".down_arrow").removeClass("rotate")}),e(".btn_submit").click(function(){if("kg"==g.weight_unit&&(g.weight=e("[name=weight]").val()/1),"cm"==g.height_unit&&(g.height=e("[name=height]").val()/100),"st"==g.weight_unit){var i=e("[name=weight1]").val()/1,s=e("[name=weight2]").val()/1;console.log(i),console.log(s),g.weight=6.35029318*(i+s/14)}if("ft"==g.height_unit){var h=e("[name=height1]").val()/1,l=e("[name=height2]").val()/1;console.log(h),console.log(l),g.height=(h+l/12)/3.28}if(""!=g.gender&&""!=g.height&&""!=g.weight&&""!=g.ethnicity&&e.isNumeric(g.weight)&&e.isNumeric(g.height)?(e(".error").hide(),e(".app_results").show()):(e(".error").show(),e(".app_results").hide()),e(".needle").removeClass("starting_position"),e(".main_copy_results").css("display","none"),e("html, body").animate({scrollTop:e(".btn_submit").offset().top-60},1e3),console.log(g),g.bmi=g.weight/(g.height*g.height),1==g.ethnicity){if("kg"==g.weight_unit)var r=18.5*(g.height*g.height),c=25*(g.height*g.height);else if("st"==g.weight_unit)var r=18.5*(g.height*g.height)/6.35,c=25*(g.height*g.height)/6.35}else if(2==g.ethnicity)if("kg"==g.weight_unit)var r=18.5*(g.height*g.height),c=22.9*(g.height*g.height);else if("st"==g.weight_unit)var r=18.5*(g.height*g.height)/6.35,c=22.9*(g.height*g.height)/6.35;""==g.weight||""==g.height?e(".results").hide():(e(".bmi_results").html(g.bmi.toFixed(1)),e(".main_copy_results").show(),e(".suggested_weight").text("Your suggested weight range: "+r.toFixed(1)+"-"+c.toFixed(1)+" "+g.weight_unit)),1==g.ethnicity?t(g.bmi.toFixed(1)):2==g.ethnicity&&o(g.bmi.toFixed(1))})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
